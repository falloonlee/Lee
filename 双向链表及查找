#include "stdio.h"
#include "string.h"
#include "stdlib.h"
#include "time.h"
struct lianbiao 
{
  int hour;//时
  int min;//分
  int sec;//秒
  char sex[10]; //性别
  struct lianbiao *front; //前驱指针
  struct lianbiao *back;// 后驱指针
};
viod get(char mn[10]) //获取输入字符。
{
  char *pm;
  pm=mn;
  printf("请输入需要查找的人的姓名");
  while(1)
  {
    *pm=getchar();
    if(*pm=='\n') //检测到回车
      {
        *pm='\0'; //把回车替换成字符串终止符然后跳出
        break;
      }
      pm++;
  }
}
  //—————————————————————————————————链表内查找名字—————————————————————————————————————//
struct lianbiao *find(char mn[10],struct lianbiao *Head,struct lianbiao *p)//定义查找链表函数
{
  p=Head->back;
  do
  {
    if(strcmp(p->name,mn)) //判断name字段是否与给定的字符串一致
    {
      return p;    //一致则返回此刻p指向的地址
    }
    p=p->back; //不一致指向下一个地址继续循环
  }while(p->back!=Head->back); //当循环完毕后跳出
  return NULL;  //循环完毕都不能找到给定字符串 反馈地址为空。
  }
    //—————————————————————————————————分性别计数—————————————————————————————————————//
  int nun(int nos[2],struct lianbiao *Head,struct lianbiao *p)
  {
    p=Head->back;    
    do
    {
      if(p->sex=="man")//sex 非0时 为男性
        nos[1]++; //男性人数加1
      else if(p->sex=="woman")
        nos[0]++; // 女性人数加1
    }while(p->back!=Head->back);
    return nos;
  }
  //—————————————————————————————————链表内删除节点—————————————————————————————————————//
  void del(struct lianbiao *p)
 {
  p->front->back=p->back;//目标前一个节点的后驱指向目标的后一个节点；
  p->back->front=p->front;//目标的后一个节点的前驱指向目标的前一个节点；
  free(p);//释放目标节点的空间
 }
  //—————————————————————————————————主函数—————————————————————————————————————// 
  int main()
  {
  int nos[2]={0};
  char mn[10]={0};
  time_t t;
  struct tm *tnow;  
  //—————————————————————————————————双向链表创建开始—————————————————————————————————————//
  struct lianbiao *Head,*p,*Tail;  //定制链表结构指针
  Head=p=Tail=calloc(1,sizeof(struct lianbiao)); //初始化指针地址
  do  //do while 赋值
  {
  Tail=calloc(1,sizeof(struct lianbiao));//初始化Tail指针
  printf("请输入签到人的姓名\n");
  scanf("%s",Tail->name);//获取姓名
  if(Tail->name=="exit") //检查姓名是否是exit
    break;
  printf("请输入签到人的性别\n");
  scanf("%s",Tail->sex);//获取性别
  time(&t);//获取本地时间
  tnow=localtime(&t); //获取本地时间
  Tail->hour=tnow->hour;  //时间赋值
  Tail->min=tnow->min;  // 分赋值
  Tail->sec=tnow->sec;  //秒赋值
  Tail->front=p;    // 当前地址前驱变为上一个地址p
  p->back=Tail;   // 上一个地址的前驱变为当前地址
  p=Tail;    //最后 吧上一个地址变更 为当前地址。
  }while(1);
  free(Tail);//释放name=exit 的地址
  p->back=Head;//双向链表 实际上尾部的后一个地址指向头部
  Head->front=p;//双向链表，头部的前一个地址指向实际尾部
  Tail=p;
  //—————————————————————————————————双向链表创建成功—————————————————————————————————————//
  get(mn);
  p=find(mn,Head,p);
  if(p->sex=="man")
    printf("查询到%s性别男的签到时间是：%d:%d:%d\n",p->name,p->hour,p->min,p->sec);
  else if (p->sex=="woman")
    printf("查询到%s性别女的签到时间是：%d:%d:%d\n",p->name,p->hour,p->min,p->sec);
  nun(nos,Head,p);
  printf("查询到男性共计%d位，女性%d位",nos[1],nos[0]);
 
  get(mn);
  Head=p=find(mn,Head,p);
  do{
  if(p->sex=="man")
    printf("查询到%s性别男的签到时间是：%d:%d:%d\n",p->name,p->hour,p->min,p->sec);
  else if (p->sex=="woman")
    printf("查询到%s性别女的签到时间是：%d:%d:%d\n",p->name,p->hour,p->min,p->sec);
  p=p->front;
  }while(p->front!=Head->front);
  printf("请输入需要删除的节点的name字段的值：\n");
  get(mn);
  p=find(mn,Head,p);
  del(p);
  p=Head->back;
  do
  {
  pirntf("%s性别%s的签到时间是：%d:%d:%d\n",p->name,p->sex,p->hour,p->min,p->sec);
  p=p->back;
  }while(p->back!=Head->back)
  return 0;
  }
